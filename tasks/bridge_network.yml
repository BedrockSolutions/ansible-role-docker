---

- validate:
    schema:
      type: object
      properties:
        gateway:
          oneOf:
            - type: "null"
            - type: string
              format: ipv4
          default: null
        interface_name:
          oneOf:
            - type: "null"
            - type: string
          default: null
        name:
          type: string
        state:
          type: string
          enum:
            - absent
            - present
          default: present
        subnet:
          oneOf:
            - type: "null"
            - type: string
              format: ipv4
          default: null
    instance: "{{ docker }}"
  register: docker_validated

- set_fact:
    docker_v: "{{ docker_validated.result }}"

- name: "Get network information"
  command: "docker network inspect {{ docker_v.name }}"
  register: docker_network_return

- name: "Create the bridge network {{ docker_v.name }}"
  command: >
    docker network create
    {{ docker_v.gateway is not none | ternary('--gateway=' + docker_v.gateway, '') }}
    {{ docker_v.interface_name is not none | ternary('-o "com.docker_v.network.bridge.name"="' + docker_v.interface_name + '"', '') }}
    {{ docker_v.subnet is not none | ternary('--subnet=' + docker_v.subnet, '') }}
    {{ docker_v.name }}
  when: docker_network_return is failed and docker_v.state == 'present'

- name: "Delete the bridge network {{ docker_v.name }}"
  command: docker network rm {{ docker_v.name }}
  when: docker_network_return is succeeded and docker_v.state == 'absent'
