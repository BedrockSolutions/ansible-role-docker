---

- validate:
    schema:
      type: object
      properties:
        device:
          type: string
        mount_point:
          type: string
        name:
          type: string
        state:
          type: string
          enum:
            - absent
            - present
          default: present
      required:
        - device
        - name
        - state
    instance: "{{ docker }}"
  register: docker_validated

- set_fact:
    docker_v: "{{ docker_validated.result }}"

- block:
    - name: "Format device {{ docker_v.device }}"
      filesystem:
        fstype: ext4
        dev: "{{ docker_v.device }}"
        opts: -m 0 -F -E lazy_itable_init=0,lazy_journal_init=0,discard

    - name: "Mount {{ docker_v.device }} to {{ docker_v.mount_point }}"
      mount:
        fstype: ext4
        opts: discard,defaults
        path: "{{ docker_v.mount_point }}"
        src: "{{ docker_v.device }}"
        state: mounted
      when: "'mount_point' in docker_v"
  become: yes
  when: docker_v.state == 'present'

- name: "Mange volume {{ docker_v.name }} on device {{ docker_v.device }}: {{ docker_v.state }}"
  docker_volume:
    driver: local
    driver_options:
      device: "{{ docker_v.device }}"
      type: ext4
    state: "{{ docker_v.state }}"
    volume_name: "{{ docker_v.name }}"
