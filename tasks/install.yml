---

- block:
    - validate:
        schema:
          type: object
          properties:
            build:
              type: string
              enum:
                - stable
                - edge
              default: stable
            edition:
              type: string
              enum:
                - ce
                - ee
              default: ce
            install_compose:
              type: boolean
              default: no
            manipulate_iptables:
              type: boolean
              default: yes
            tls_cert_path:
              type: string
              default: /etc/docker/tls_cert.pem
            tls_enabled:
              type: boolean
              default: no
            tls_key_path:
              type: string
              default: /etc/docker/tls_key.pem
            user:
              type: string
              default: ubuntu
          required:
            - build
            - edition
            - install_compose
            - manipulate_iptables
            - tls_cert_path
            - tls_enabled
            - tls_key_path
            - user
        instance: "{{ docker }}"
      register: docker_validated

    - set_fact:
        docker_v: "{{ docker_validated.result }}"

    - set_fact:
        docker_daemon_json:
          iptables: "{{ docker_v.manipulate_iptables }}"
          ip-forward: yes
          tls: "{{ docker_v.tls_enabled }}"
          hosts:
            - "tcp://0.0.0.0:{{ docker_v.tls_enabled | ternary('2376', '2375') }}"
            - fd://

    - set_fact:
        docker_tls_config:
          tlscert: "{{ docker_v.tls_cert_path }}"
          tlskey: "{{ docker_v.tls_key_path }}"
          tlsverify: "{{ docker_v.tls_enabled }}"

    - block:
        - name: "Install Docker"
          import_role:
            name: angstwad.docker_ubuntu
          vars:
            daemon_json: "{{ docker_daemon_json | combine(docker_v.tls_enabled | ternary(docker_tls_config, {})) }}"
            docker_apt_channel: "{{ docker_v.build }}"
            docker_edition: "{{ docker_v.edition }}"
            docker_group_members: "{{ docker_v.user }}"
            pip_install_docker_compose: "{{ docker_v.install_compose }}"
            ufw_set_forward_policy: no
            uninstall_previous_docker_versions: yes

        - name: "Enable ip forwarding in the kernel"
          sysctl:
            name: net.ipv4.ip_forward
            value: 1
            sysctl_set: yes
            state: present
            reload: yes

        - name: "Enable memory and swap accounting"
          lineinfile:
            path: /etc/default/grub
            regexp: GRUB_CMDLINE_LINUX_DEFAULT
            line: GRUB_CMDLINE_LINUX_DEFAULT="cgroup_enable=memory swapaccount=1"
          notify:
            - grub_update
            - os_reboot
      become: yes

    - name: "Reset the ssh connection to pick up docker group membership"
      import_role:
        name: bedrock.common
      vars:
        common:
          command: controller_reset_connection
  tags:
    - docker_install